/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.records;


import jooq.jooq_dsl.tables.JMember;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class JMemberRecord extends UpdatableRecordImpl<JMemberRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>MEMBER.ID</code>.
     */
    public JMemberRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>MEMBER.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>MEMBER.NAME</code>.
     */
    public JMemberRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>MEMBER.NAME</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>MEMBER.EMAIL</code>.
     */
    public JMemberRecord setEmail(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>MEMBER.EMAIL</code>.
     */
    public String getEmail() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JMemberRecord
     */
    public JMemberRecord() {
        super(JMember.MEMBER);
    }

    /**
     * Create a detached, initialised JMemberRecord
     */
    public JMemberRecord(Long id, String name, String email) {
        super(JMember.MEMBER);

        setId(id);
        setName(name);
        setEmail(email);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised JMemberRecord
     */
    public JMemberRecord(jooq.jooq_dsl.tables.pojos.JMember value) {
        super(JMember.MEMBER);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setEmail(value.getEmail());
            resetChangedOnNotNull();
        }
    }
}
